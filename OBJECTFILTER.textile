Object filters allow you to sort and filter down your results with the help of a few simple methods.

See examples below for sample use cases:
<pre><code>
<?php

require_once dirname(__FILE__) . '/SoftLayer/SoapClient.class.php';

$client = SoftLayer_SoapClient::getClient('SoftLayer_Account', null, $apiUsername, $apiKey);

$mask 	= new SoftLayer_ObjectMask();
$filter = new SoftLayer_ObjectFilter();

$mask->hardware->networkComponents;
$filter->hardware->serialNumber->contains('ASL');

$client->setObjectMask($mask);
$client->setObjectFilter($filter);

try {
	$hardwareList = $client->getHardware();
	//var_dump($hardwareList);

	foreach($hardwareList as $hardware){
		if(isset($hardware->serialNumber)) { echo $hardware->serialNumber."\n"; }
	}
}catch(Exception $e){
	echo 'ERROR: '.$e->getMessage();
}
?>
</code></pre>

The example above fetches the full list of hardware on the account, including the network components
for each. The filter tells the API to return only the records that have a serial number value
that contains the string "ASL". The rest of the script just outputs the results.